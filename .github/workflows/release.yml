name: Create Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  create:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        run: gh release create ${{ github.ref_name }} --title "${{ github.ref_name }}" --latest --notes "$(./extract_changes.sh ${{ github.ref_name }} CHANGELOG.md)"
        env:
          GH_TOKEN: ${{ github.token }}
  publish_crate:
    name: Publish on crates.io
    needs: create
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
  deb:
    name: Upload deb package
    needs: create
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
      - name: Install cargo-deb
        run: cargo install cargo-deb
      - name: Build deb package
        id: build_deb
        run: |
          pkg=$(cargo deb)

          echo "deb_pkg=$pkg" >> $GITHUB_OUTPUT
      - name: Upload release deb
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.ref_name }} ${{ steps.build_deb.outputs.deb_pkg }}
  build:
    name: Build
    needs: create
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    env:
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`.
      TARGET_FLAGS: ""
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
      TARGET_DIR: ./target
    strategy:
      fail-fast: false
      matrix:
        build: [linux, linux-arm, macos, macos-arm]
        include:
        - build: linux
          os: ubuntu-latest
          rust: stable
          target: x86_64-unknown-linux-musl
        - build: linux-arm
          os: ubuntu-latest
          rust: stable
          target: arm-unknown-linux-gnueabihf
        - build: macos
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
        - build: macos-arm
          os: macos-latest
          rust: stable
          target: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
      - name: Use Cross
        shell: bash
        run: |
          cargo install cross
      - name: Install essential packages (apt)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update -y
          sudo apt install pkg-config libssl-dev -y
      - name: Build
        run: cross build --verbose --release --target ${{ matrix.target }}
      - name: Build archive
        shell: bash
        run: |
          staging="quartz-${{ github.ref_name }}-${{ matrix.target }}"
          mkdir -p "$staging"/doc

          cp {README.md,LICENSE} "$staging/"
          cp CHANGELOG.md "$staging/doc/"

          cp man/man1/quartz.1 "$staging/doc/"
          cp "target/${{ matrix.target }}/release/quartz" "$staging/"
          tar czf "$staging.tar.gz" "$staging"
          echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV
      - name: Upload release archive
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.ref_name }} ${{ env.ASSET }}
      - name: Mark as able to brew
        if: matrix.os == 'macos-latest' && matrix.target == 'x86_64-apple-darwin'
        run: echo "SHOULD_BREW=true" >> $GITHUB_ENV
  homebrew:
    name: Update Homebrew formula
    needs: [create, build]
    if: ${{ env.SHOULD_BREW == true }}
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: dawidd6/action-homebrew-bump-formula@v3
        with:
          token: ${{ secrets.HOMEBREW_TOKEN }}
          tap: eduardorodriguesf/homebrew-quartz
          formula: quartz
